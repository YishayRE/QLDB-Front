---
import Card from './Card.astro';

const {
  previousPage = '#',
  nextPage = '#',
  currentPage = '1',
  totalPages = '12',
  focus = '#'
} = Astro.props
---

<nav class="pagination" aria-label="Pagination">
  <ul class="pagination__list">
    <li>
      <a href={focus} id="pastPage" aria-label="Previous page" style="display: none;">
        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="32" height="32" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m14 7-5 5 5 5"/></svg>
      </a>
    </li>
    <li>
      <span>Página <span id="current-page">{currentPage}</span> de <span id="total-pages">{totalPages}</span></span>
    </li>
    <li>
      <a href={focus} id="nextPage" aria-label="Next page">
        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="32" height="32" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m10 7 5 5-5 5"/></svg>
      </a>
    </li>
  </ul>
</nav>

<script>
  let page = 1;

  const pastPage = document.getElementById('pastPage')
  const nextPage = document.getElementById('nextPage')
  const currentPage = document.getElementById('current-page');
  const totalPages = document.getElementById('total-pages');

  const imgs = [
    'https://res.cloudinary.com/nodecafe/image/upload/v1663260183/Dashboard/agave_v4xbus.jpg',
    'https://res.cloudinary.com/nodecafe/image/upload/v1663260183/Dashboard/tequila_zmzwmo.jpg',
    'https://res.cloudinary.com/nodecafe/image/upload/v1664167647/Dashboard/OIP_vz9zfh.jpg',
    'https://res.cloudinary.com/nodecafe/image/upload/v1664167884/Dashboard/botellas_nc7muo.jpg'
  ];

  let dibujarT;

  let dibujarC;

  const myHeaders = new Headers();
  myHeaders.append("Access-Control-Allow-Origin", "*");
  myHeaders.append("Access-Control-Allow-Credentials", "true");
  myHeaders.append("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  myHeaders.append("Vary", "Origin");
  myHeaders.append("Host", `${import.meta.env.PUBLIC_URL}`);

  const requestOptions = {
    method: 'GET',
    headers: myHeaders,
    redirect: 'follow'
  };
  let resp;

  const params = window.location.pathname;

  switch (params) {
    case '/produccion/':
      resp = await fetch(`${import.meta.env.PUBLIC_API_URL}/producciones/`, requestOptions);

      dibujarT = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);
        
        arrayF.forEach(data => {
          console.log(data.idProduccion);
          html += `
          <tr slot="tr" class="" role="alert" onclick=obtenerQR("${data._id}")>
            <td class="d-flex align-items-center">
              <div class="img botella"></div>
              <div class="pl-3 email">
                  <span>Id de producción: ${data.idProduccion}</span>
                  <span>${data._id}</span>
              </div>
            </td>
            <td>${data.lugarProduccion}</td>
            <td class="status"><span class="active">${new Date(data.fechaInicio).toLocaleString()}</span></td>
            <td class="status"><span class="${(data.fechaFIn) ? 'active' : 'waiting'}">${(data.fechaFIn) ? new Date(data.fechaFIn).toLocaleString() : 'Sin fecha final'}</span></td>
          </tr>
          `;
        });

        const tabla = document.querySelector('#tabla');
        
        tabla.innerHTML = html;
      }

      dibujarC = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);

        arrayF.forEach(data => {
          html += `
            <div class="card" onclick=obtenerQR("${data._id}")>
              <div class="card__image">
                <img src=${imgs[1]} alt="">
              </div>
              <div class="card__content">
                <h3>
                  <a>Id de producción ${data.idProduccion}</a>
                </h3>
                <h5>
                  ${data.lugarProduccion}
                </h5>
                <p>
                  <p>${new Date(data.fechaInicio).toLocaleString()}</p>
                  <p>${(data.fechaFIn) ? new Date(data.fechaFIn).toLocaleString() : 'Sin fecha final'}</p>
                </p>
                <small>
                  ${data._id}
                </small>
              </div>
            </div>
          `;
        });

        const content = document.querySelector('#content');
        
        content.innerHTML = html;
      }
      break;
    case '/material/':
      resp = await fetch(`${import.meta.env.PUBLIC_API_URL}/materiales/`, requestOptions);

      dibujarT = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);

        arrayF.forEach(data => {
          html += `
          <tr slot="tr" class="" role="alert" onclick=obtenerQR("${data._id}")>
            <td class="d-flex align-items-center">
              <div class="img ${(data.Nombre == 'Agave') ? 'agave' : 'botella'}"></div>
              <div class="pl-3 email">
                  <span>${data.Lote}</span>
                  <span>${data._id}</span>
              </div>
            </td>
            <td>${data.Nombre}</td>
            <td class="status"><span class="active">${data.Cantidad}</span></td>
            <td class="align-items-center">
                <div class="pl-3 email">
                    <span>${data.Origen}</span>
                    <span>${data.FechaRecoleccion}</span>
                </div>
            </td>
          </tr>
          `;
        });
        const tabla = document.querySelector('#tabla');
        
        tabla.innerHTML = html;
      }

      dibujarC = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);

        arrayF.forEach(data => {
          html += `
            <div class="card" onclick=obtenerQR("${data._id}")>
              <div class="card__image">
                <img src=${(data.Nombre == 'Agave') ? imgs[0] : imgs[1]} alt="">
              </div>
              <div class="card__content">
                <h3>
                  <a>${data.Nombre}</a>
                </h3>
                <h5>
                  ${data.Lote}
                </h5>
                <p>
                  <p>${data.Cantidad}</p>
                  <p>${data.Origen}</p>
                  <p>${data.FechaRecoleccion}</p>
                </p>
                <small>
                  ${data._id}
                </small>
              </div>
            </div>
          `;
        });

        const content = document.querySelector('#content');
        
        content.innerHTML = html;
      }
      break; 
    case '/transporte/':
      resp = await fetch(`${import.meta.env.PUBLIC_API_URL}/transportes/`, requestOptions);

      dibujarT = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);

        arrayF.forEach(data => {
          html += `
          <tr slot="tr" class="" role="alert" onclick=obtenerQR("${data.id}")>
            <td class="d-flex align-items-center">
              <div class="img ${(data.Nombre == 'Agave') ? 'trans-agave' :'trans-botella'}"></div>
              <div class="pl-3 email">
                  <span>${data.idTransporte}</span>
                  <span>${data.id}</span>
              </div>
            </td>
            <td class="status"><span class="${(data.fechaFin) ? 'active' : 'waiting'}">${data.Nombre}</span></td>
            <td class="align-items-center">
              <div class="pl-3 email">
                    <span>${data.origen}</span>
                    <span>${new Date(data.fechaInicio).toLocaleString()}</span>
                </div>
            </td>
            <td class="align-items-center">
                <div class="pl-3 email">
                    <span>${data.destino}</span>
                    <span>${(data.fechaFin) ? new Date(data.fechaFin).toLocaleString() : 'Sin fecha final'}</span>
                </div>
            </td>
          </tr>
          `;
        });
        const tabla = document.querySelector('#tabla');
        
        tabla.innerHTML = html;
      }

      dibujarC = (array, page) => {
        let html = ''
        const inicio = (page - 1) * 6;
        const fin = page * 6
        const arrayF = array.slice(inicio, fin);

        arrayF.forEach(data => {
          html += `
            <div class="card" onclick=obtenerQR("${data.id}")>
              <div class="card__image">
                <img src=${(data.Nombre == 'Agave') ? imgs[2] : imgs[3]} alt="">
              </div>
              <div class="card__content">
                <h3>
                  <a>${data.Nombre}</a>
                </h3>
                <h5>
                  Id de transporte: ${data.idTransporte}
                </h5>
                <p>
                  <p>${data.origen} ${new Date(data.fechaInicio).toLocaleString()}</p>
                  <p>${data.destino} ${new Date(data.fechaFin).toLocaleString()}</p>
                </p>
                <small>
                  ${data.id}
                </small>
              </div>
            </div>
          `;
        });

        const content = document.querySelector('#content');
        
        content.innerHTML = html;
      }
      break;  
    default:
      break;
  }

  const respuesta = await resp.json();
  console.log(respuesta);

  const json = respuesta.respuesta;
  hideLoader();

  let total = Math.ceil(json.length / 6);
  
  totalPages.innerHTML = total.toString();
  currentPage.innerHTML = page.toString();

  dibujarT(json, page);
  dibujarC(json, page);
  
  if(page >= total){
    nextPage.style.display = "none";
  }
  
  if(total == 1){
    pastPage.style.display = "none";
    nextPage.style.display = "none";
  }

  pastPage.addEventListener("click", () => {
    page--
    dibujarT(json, page);
    dibujarC(json, page);
    currentPage.innerHTML = page.toString();
    pastPage.style.display = "block";
    nextPage.style.display = "block";
    if(page <= 1){
      pastPage.style.display = "none"; 
    }
  })

  nextPage.addEventListener("click", () => {
    page++
    dibujarT(json, page);
    dibujarC(json, page);
    currentPage.innerHTML = page.toString();
    pastPage.style.display = "block";
    nextPage.style.display = "block";
    if(page >= total){
      nextPage.style.display = "none";
    }
  })
</script>

<script is:inline>
  let tabla = document.getElementById("tabla");
  let cards = document.getElementById("content");

  let stateCheck = setInterval(() => {
    if (tabla.hasChildNodes() || cards.hasChildNodes()) {
      clearInterval(stateCheck);
      hideLoader();
    }
  }, 100);
</script>

<style lang="scss" is:global>
  .pagination {
    .pagination__list {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
      
    a {
      display: block;
      border: 2px solid currentColor;
      border-radius: 3px;
      transition: background-color 0.15s ease-in-out;

      &:hover,
      &:focus-visible {
        background-color: orange;

        svg path {
          stroke: #222;
        }
      }
    }
  }
</style>
